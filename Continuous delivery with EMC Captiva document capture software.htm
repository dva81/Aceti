<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:20.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:18.0pt;
	font-family:"Calibri Light",sans-serif;
	color:#1F3864;
	font-weight:normal;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Calibri Light",sans-serif;
	color:#2F5496;
	font-weight:normal;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin:0in;
	line-height:85%;
	font-size:36.0pt;
	font-family:"Calibri Light",sans-serif;
	color:#44546A;
	text-transform:uppercase;
	letter-spacing:-.75pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Title Char";
	margin:0in;
	line-height:85%;
	font-size:36.0pt;
	font-family:"Calibri Light",sans-serif;
	color:#44546A;
	text-transform:uppercase;
	letter-spacing:-.75pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Title Char";
	margin:0in;
	line-height:85%;
	font-size:36.0pt;
	font-family:"Calibri Light",sans-serif;
	color:#44546A;
	text-transform:uppercase;
	letter-spacing:-.75pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Title Char";
	margin:0in;
	line-height:85%;
	font-size:36.0pt;
	font-family:"Calibri Light",sans-serif;
	color:#44546A;
	text-transform:uppercase;
	letter-spacing:-.75pt;}
a:link, span.MsoHyperlink
	{color:#0563C1;
	text-decoration:underline;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Calibri Light",sans-serif;
	color:#1F3864;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Calibri Light",sans-serif;
	color:#2F5496;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Calibri Light",sans-serif;
	color:#44546A;
	text-transform:uppercase;
	letter-spacing:-.75pt;}
span.p-name
	{mso-style-name:p-name;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=NL link="#0563C1" vlink="#954F72" style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoTitle align=center style='text-align:center'>BLOG</p>

<h1 align=center style='text-align:center'><span class=p-name>Dennis Van Aelst
| </span><span class=p-name><span lang=EN-US><a href="https://github.com/dva81"><span
lang=NL>GitHub</span></a></span></span><span class=p-name> | </span><span
class=p-name><span lang=EN-US><a
href="https://www.linkedin.com/in/dennisvanaelst/"><span lang=NL>LinkedIn</span></a></span></span></h1>

<h2 align=center style='text-align:center'>Microsoft 365 | Power Platform |
.NET | Azure DevOps | OpenText Intelligent Capture</h2>

<p class=MsoNormal align=center style='margin-bottom:0in;text-align:center;
line-height:normal;vertical-align:baseline'><b><span style='font-size:22.0pt;
font-family:"Times New Roman",serif'>&nbsp;</span></b></p>

<div align=center>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='border-collapse:collapse'>
 <tr>
  <td width=648 valign=top style='width:6.75in;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoTitle><span lang=EN-US>Continuous delivery with EMC Captiva
  document capture software</span></p>
  <p class=MsoNormal><span lang=EN-US>Setting up a continuous delivery
  environment can be a daunting task, especially when working with third party
  software. In this blog post, Dennis Van Aelst and Stef Kusters provide some
  insight in using EMC Captiva in a continuous delivery environment.</span></p>
  <h1><span lang=EN-US>What is EMC Captiva?</span></h1>
  <p class=MsoNormal><span lang=EN-US>The EMC Captiva products are used to
  automate document capture and enterprise capture – in other words to
  automatically digitize paper documents such as files or letters. With EMC
  Captiva, information that was stored on paper becomes easily accessible in
  content management systems.</span></p>
  <h1><span lang=EN-US>What is continuous delivery and what are the benefits?</span></h1>
  <p class=MsoNormal><span lang=EN-US>A continuous delivery environment is set
  up to optimize development processes: it focuses on rapid development and
  deployment of bite-sized pieces of software.</span></p>
  <p class=MsoNormal><span lang=EN-US>In practice, that means that developers
  work on the software on their own workstations, while the continuous delivery
  system takes care of versioning, testing and deploying their work. It reduces
  the amount of manual tasks, which improves the quality of development and
  deployment, while reducing unnecessary stress during deployment.</span></p>
  <p class=MsoNormal><span lang=EN-US>Setting up this environment requires a
  fundamental change in the process, technologies used and mindset of all
  parties involved.&nbsp;In this post, we’ll focus on the process and
  technologies, as hanging the mindset of people is a different (and much more
  subjective) challenge, which probably deserves its own blog post.</span></p>
  <h1><span lang=EN-US>How we set up a continuous delivery process</span></h1>
  <p class=MsoNormal><span lang=EN-US>In this post, we’ll use the process we
  created for one of our customers as an example. The image below shows how the
  set-up of the continuous delivery environment.</span></p>
  <p class=MsoNormal><span lang=EN-US>These are the main steps in this set-up:</span></p>
  <p class=MsoNormal><span lang=EN-US>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Developers
  work at their workstations with Captiva Designer and commit code to the GIT
  repository</span></p>
  <p class=MsoNormal><span lang=EN-US>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creation
  of an artifact with Jenkins in Artifactory</span></p>
  <p class=MsoNormal><span lang=EN-US>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Testing,
  acceptance and push to production (the “live” environment) with Nolio</span></p>
  <p class=MsoNormal><span lang=EN-US>4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Automated
  testing using UFT</span></p>
  <h1><span lang=EN-US>Step 1: development in Captiva Designer and commitment
  to GIT</span></h1>
  <p class=MsoNormal><span lang=EN-US>The first step in the process, as shown
  in the image above, is the developers working on their workstations. They use
  the Captiva Designer to make changes to the development environment as they
  please. When they are done, the developers commit their code to the GIT
  repository. GIT is primarily used for version control in this set-up.</span></p>
  <p class=MsoNormal style='line-height:normal'><span lang=EN-US>If you’d like
  a more detailed description of this step, please read our&nbsp;</span><span
  lang=NL-BE><a
  href="http://community.emc.com/people/dennisvanaelst/blog/2016/06/21/how-to-use-captiva-in-a-continuous-delivery-environment"
  target="_blank"><span lang=EN-US style='font-size:12.0pt;font-family:"Segoe UI",sans-serif;
  color:blue'>blog post on the EMC Community blog</span></a></span><span
  lang=EN-US>.</span></p>
  <h1><span lang=EN-US>Step 2: Creation of an artifact with Jenkins in
  Artifactory</span></h1>
  <p class=MsoNormal><span lang=EN-US>In this second step, we focus on version
  control and getting our deployment configuration in Artifactory using
  Jenkins. We use GITBLIT as a repository and Tortoise as an interface for the
  developer.</span></p>
  <p class=MsoNormal><span lang=EN-US>After this step Jenkins kicks off the
  Nolio process and deployment to the test environment is on its way.</span></p>
  <p class=MsoNormal style='line-height:normal'><span lang=EN-US>A more
  in-depth description of this step can be found in this&nbsp;</span><span
  lang=NL-BE><a
  href="http://community.emc.com/people/dennisvanaelst/blog/2016/06/27/how-to-use-captiva-in-a-continuous-delivery-environment-using-git-and-jenkins"
  target="_blank"><span lang=EN-US style='font-size:12.0pt;font-family:"Segoe UI",sans-serif;
  color:blue'>blog post</span></a></span><span lang=EN-US>.</span></p>
  <h1><span lang=EN-US>Step 3: Testing, acceptance and push to production with
  Nolio</span></h1>
  <p class=MsoNormal><span lang=EN-US>&nbsp;Nolio is a configurable release
  management tool that can be used to deploy to multiple environments and
  create the automatic deployment scripts, replacing the manual cookbook.</span></p>
  <p class=MsoNormal><span lang=EN-US>The setup we made only uses the
  deployment part for automating various steps in the deploy process. With
  Powershell or something similar you can achieve the same thing. We have a
  template in Nolio for deploying these configurations behind this template are
  multiple Nolio processes with all the steps needed to deploy processes or
  profiles or configuration items.</span></p>
  <h1><span lang=EN-US>&nbsp;Step 4: Using UFT for automated testing</span></h1>
  <p class=MsoNormal><span lang=EN-US>At the end of the deployment process, we
  kick off an automated test using Unified Functional Testing (HP). This test
  creates a batch by importing images, then indexes them and verified the data
  in Captiva. We added a web service which automatically looks up values in the
  batch and compares them to the expected values. That way we can easily create
  100 or more test cases.</span></p>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  lang=EN-US>The content of this blog post appeared across various blog posts
  by Dennis Van Aelst and Stef Kusters on the&nbsp;</span><span lang=NL-BE><a
  href="http://community.emc.com/people/dennisvanaelst/content?filterID=contentstatus%5Bpublished%5D~objecttype~objecttype%5Bblogpost%5D"
  target="_blank"><span lang=EN-US style='font-size:12.0pt;font-family:"Segoe UI",sans-serif;
  color:blue'>EMC Community blog</span></a></span><span lang=EN-US>&nbsp;first
  in October, 2016</span></p>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  <p class=MsoNormal style='margin-right:183.75pt;line-height:normal;
  background:white'><span lang=EN-US style='font-size:36.0pt;font-family:"Calibri Light",sans-serif;
  color:black'>&nbsp;</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoTitle style='margin-right:183.75pt'><span lang=EN-US
style='font-family:"Calibri",sans-serif'>&nbsp;</span></p>

</div>

</body>

</html>
